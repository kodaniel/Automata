<UserControl
    x:Class="Automata.Views.EditorControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="using:Automata.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:fields="using:Automata.ViewModels.Fields"
    xmlns:local="using:Automata.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <UserControl.Resources>

        <converters:InverseBoolConverter x:Key="InverseBoolConverter" />
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <converters:InverseBoolToVisibilityConverter x:Key="InverseBoolToVisibilityConverter" />
        <converters:EmptyToVisibilityConverter x:Key="EmptyToVisibilityConverter" />

        <DataTemplate x:Key="StringEditorTemplate" x:DataType="fields:StringEditor">
            <TextBox IsReadOnly="{x:Bind IsReadOnly}" Text="{x:Bind Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
        </DataTemplate>

        <DataTemplate x:Key="IntegerEditorTemplate" x:DataType="fields:IntegerEditor">
            <NumberBox IsEnabled="{x:Bind IsReadOnly, Converter={StaticResource InverseBoolConverter}}" Text="{x:Bind Value, Mode=TwoWay}" />
        </DataTemplate>

        <DataTemplate x:Key="DoubleEditorTemplate" x:DataType="fields:DoubleEditor">
            <NumberBox IsEnabled="{x:Bind IsReadOnly, Converter={StaticResource InverseBoolConverter}}" Text="{x:Bind Value, Mode=TwoWay}" />
        </DataTemplate>

        <DataTemplate x:Key="BoolEditorTemplate" x:DataType="fields:BoolEditor">
            <ToggleSwitch IsEnabled="{x:Bind IsReadOnly, Converter={StaticResource InverseBoolConverter}}" IsOn="{x:Bind Value, Mode=TwoWay}" />
        </DataTemplate>

        <DataTemplate x:Key="ExpressionTemplate" x:DataType="fields:Editor">
            <TextBox
                x:Name="ExpressionTextBox"
                FontStyle="Italic"
                Foreground="OrangeRed"
                IsReadOnly="{x:Bind IsReadOnly}"
                IsSpellCheckEnabled="False"
                PlaceholderText="Expression"
                Text="{x:Bind Expression, Mode=TwoWay}"
                TextChanged="ExpressionTextBox_TextChanged" />
        </DataTemplate>

        <local:EditorTemplateSelector
            x:Key="EditorTemplateSelector"
            BoolEditorTemplate="{StaticResource BoolEditorTemplate}"
            DoubleEditorTemplate="{StaticResource DoubleEditorTemplate}"
            IntegerEditorTemplate="{StaticResource IntegerEditorTemplate}"
            StringEditorTemplate="{StaticResource StringEditorTemplate}" />

    </UserControl.Resources>

    <Grid ColumnSpacing="8">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <StackPanel VerticalAlignment="Center" Orientation="Horizontal">
            <TextBlock FontSize="14" Text="{x:Bind Editor.Name}" />
            <FontIcon
                Margin="8,0,0,0"
                FontFamily="{StaticResource SymbolThemeFontFamily}"
                FontSize="10"
                Glyph="&#xe82f;"
                ToolTipService.ToolTip="{x:Bind Editor.Tooltip}"
                Visibility="{x:Bind Editor.Tooltip, Converter={StaticResource EmptyToVisibilityConverter}}" />
        </StackPanel>

        <ContentControl
            x:Name="EditorContent"
            Grid.Row="1"
            HorizontalContentAlignment="Stretch"
            Content="{x:Bind Editor, Mode=OneWay}"
            ContentTemplateSelector="{StaticResource EditorTemplateSelector}"
            Visibility="{x:Bind Editor.IsExpression, Mode=TwoWay, Converter={StaticResource InverseBoolToVisibilityConverter}}" />

        <ContentControl
            x:Name="ExpressionEditorContent"
            Grid.Row="1"
            HorizontalContentAlignment="Stretch"
            Content="{x:Bind Editor, Mode=OneWay}"
            ContentTemplate="{StaticResource ExpressionTemplate}"
            Visibility="{x:Bind Editor.IsExpression, Mode=TwoWay, Converter={StaticResource BoolToVisibilityConverter}}" />

        <TextBox
            Grid.Row="1"
            Grid.Column="1"
            Text="{x:Bind Editor.ContextId, Mode=TwoWay}"
            Visibility="{x:Bind Editor.Bindable, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />

        <!--<AppBarButton
            Grid.Row="1"
            Grid.Column="2"
            Icon="More"
            IsCompact="True">
            <AppBarButton.Flyout>
                <MenuFlyout>
                    <ToggleMenuFlyoutItem
                        IsChecked="{x:Bind Editor.IsExpression, Mode=TwoWay}"
                        Tag="expression"
                        Text="Expression" />
                    <MenuFlyoutItem Tag="contextId" Text="Set context Id" />
                    <MenuFlyoutSeparator />
                    <MenuFlyoutItem Tag="reset" Text="Reset" />
                </MenuFlyout>
            </AppBarButton.Flyout>
        </AppBarButton>-->

    </Grid>
</UserControl>
